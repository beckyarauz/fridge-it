{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/modules/auth/auth.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/interceptors/http.token.interceptor.ts","./src/app/core/services/api.service.ts","./src/app/core/services/auth-guard.service.ts","./src/app/core/services/env.service.provider.ts","./src/app/core/services/env.service.ts","./src/app/core/services/index.ts","./src/app/core/services/jwt.service.ts","./src/app/core/services/user.service.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/no-auth-guard.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/show-authed.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div style=\\\"text-align:center\\\" id=\\\"app-container\\\">\\n  <mat-sidenav-container id=\\\"app-sidebar-container\\\">\\n    <mat-sidenav #sidenav mode=\\\"side\\\" id=\\\"sidebar\\\" fxLayout\\n                 fxLayout.xs=\\\"column\\\">\\n      <button mat-raised-button class=\\\"side-btn\\\" color=\\\"primary\\\">\\n        Buy Drink\\n      </button>\\n        <button mat-raised-button class=\\\"side-btn\\\" color=\\\"accent\\\">\\n        Drinks Bought\\n        </button>\\n      <button mat-raised-button class=\\\"side-btn\\\">Click me!</button>\\n\\n    </mat-sidenav>\\n    <mat-sidenav-content fxLayout>\\n      <div id=\\\"sidebar-toggler\\\">\\n        <button mat-button (click)=\\\"sidenav.toggle()\\\">\\n          <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"expand sideNav\\\">list</mat-icon>\\n        </button>\\n      </div>\\n      <div id=\\\"main-content\\\">\\n        <router-outlet></router-outlet>\\n<!--        <h1>-->\\n<!--          Welcome to {{ title }}!-->\\n<!--        </h1>-->\\n<!--        <mat-card>-->\\n<!--          <img mat-card-image />-->\\n<!--          <mat-card-title>Simple card</mat-card-title>-->\\n<!--          <mat-slider min=\\\"1\\\" max=\\\"1000\\\" step=\\\"1\\\" value=\\\"1\\\"></mat-slider>-->\\n<!--          <mat-card-content>content</mat-card-content>-->\\n<!--        </mat-card>-->\\n      </div>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\"","module.exports = \"<div class=\\\"auth-page\\\">\\n  <div class=\\\"container page\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-md-6 offset-md-3 col-xs-12\\\">\\n        <h1 class=\\\"text-xs-center\\\">{{ title }}</h1>\\n        <p class=\\\"text-xs-center\\\">\\n          <a [routerLink]=\\\"['/login']\\\" *ngIf=\\\"authType == 'register'\\\">Have an account?</a>\\n          <a [routerLink]=\\\"['/register']\\\" *ngIf=\\\"authType == 'login'\\\">Need an account?</a>\\n        </p>\\n        <form [formGroup]=\\\"authForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n          <mat-form-field >\\n            <mat-form-field class=\\\"form-group\\\">\\n              <input\\n                matInput\\n                formControlName=\\\"username\\\"\\n                placeholder=\\\"Username\\\"\\n                type=\\\"text\\\" />\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"form-group\\\">\\n              <input\\n                matInput\\n                formControlName=\\\"password\\\"\\n                placeholder=\\\"Password\\\"\\n                type=\\\"password\\\" />\\n            </mat-form-field>\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n              {{ title }}\\n            </button>\\n          </mat-form-field>\\n        </form>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nconst routes: Routes = [\n  // {\n  //   path: 'settings',\n  //   loadChildren: './settings/settings.module#SettingsModule'\n  // },\n  // {\n  //   path: 'profile',\n  //   loadChildren: './profile/profile.module#ProfileModule'\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    // preload all modules; optionally we could\n    // implement a custom preloading strategy for just some\n    // of the modules (PRs welcome 😉)\n    preloadingStrategy: PreloadAllModules\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from './core/services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private userService: UserService\n  ) {}\n\n  title = 'fridge-it';\n\n  ngOnInit() {\n    this.userService.populate();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { EnvServiceProvider } from './core/services/env.service.provider';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatCardModule} from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AuthModule } from './modules/auth/auth.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AuthModule,\n    FlexLayoutModule,\n    MatIconModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatCardModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatButtonModule,\n    CoreModule,\n    SharedModule,\n    AuthModule,\n    AppRoutingModule\n  ],\n  providers: [EnvServiceProvider],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpTokenInterceptor } from './interceptors/http.token.interceptor';\n\nimport {\n  ApiService,\n  AuthGuard,\n  JwtService,\n  UserService\n} from './services';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpTokenInterceptor, multi: true },\n    ApiService,\n    AuthGuard,\n    JwtService,\n    UserService\n  ],\n  declarations: []\n})\nexport class CoreModule { }\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { JwtService } from '../services';\n\n@Injectable()\nexport class HttpTokenInterceptor implements HttpInterceptor {\n  constructor(private jwtService: JwtService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    };\n\n    const token = this.jwtService.getToken();\n\n    if (token) {\n      headersConfig['Authorization'] = `Token ${token}`;\n    }\n\n    const request = req.clone({ setHeaders: headersConfig });\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable ,  throwError } from 'rxjs';\n\nimport { JwtService } from './jwt.service';\nimport { catchError } from 'rxjs/operators';\nimport { EnvService } from './env.service';\n\n@Injectable()\nexport class ApiService {\n  constructor(\n    private http: HttpClient,\n    private jwtService: JwtService,\n    private environment: EnvService\n  ) {}\n\n  private formatErrors(error: any) {\n    return  throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${this.environment.apiUrl}${path}`, { params })\n      .pipe(catchError(this.formatErrors));\n  }\n\n  put(path: string, body: object = {}): Observable<any> {\n    return this.http.put(\n      `${this.environment.apiUrl}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  post(path: string, body: object = {}): Observable<any> {\n    return this.http.post(\n      `${this.environment.apiUrl}${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  delete(path): Observable<any> {\n    return this.http.delete(\n      `${this.environment.apiUrl}${path}`\n    ).pipe(catchError(this.formatErrors));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { UserService } from './user.service';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n\n    return this.userService.isAuthenticated.pipe(take(1));\n\n  }\n}\n","import { EnvService } from './env.service';\n\nexport const EnvServiceFactory = () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables from browser window\n  const browserWindow = window || {};\n  const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n  // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n  for (const key in browserWindowEnv) {\n    if (browserWindowEnv.hasOwnProperty(key)) {\n      env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n};\n\nexport const EnvServiceProvider = {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: [],\n};\n","export class EnvService {\n\n  // The values that are defined here are the default values that can\n  // be overridden by env.js\n\n  // API url\n  public apiUrl = '';\n\n  // Whether or not to enable debug mode\n  public enableDebug = true;\n\n  constructor() {\n  }\n\n}\n","export * from './api.service';\nexport * from './auth-guard.service';\nexport * from './jwt.service';\nexport * from './user.service';\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class JwtService {\n\n  getToken(): string {\n    return window.localStorage.jwtToken;\n  }\n\n  saveToken(token: string) {\n    window.localStorage.jwtToken = token;\n  }\n\n  destroyToken() {\n    window.localStorage.removeItem('jwtToken');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable ,  BehaviorSubject ,  ReplaySubject } from 'rxjs';\n\nimport { ApiService } from './api.service';\nimport { JwtService } from './jwt.service';\nimport { User } from '../models/user.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class UserService {\n  private currentUserSubject = new BehaviorSubject<User>({} as User);\n\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\n\n  constructor(\n    private apiService: ApiService,\n    private http: HttpClient,\n    private jwtService: JwtService\n  ) {}\n\n  // Verify JWT in localstorage with server & load user's info.\n  // This runs once on application startup.\n  populate() {\n    // If JWT detected, attempt to get & store user's info\n    if (this.jwtService.getToken()) {\n      this.apiService.get('/user')\n        .subscribe(\n          data => this.setAuth(data.user),\n          err => this.purgeAuth()\n        );\n    } else {\n      // Remove any potential remnants of previous auth states\n      this.purgeAuth();\n    }\n  }\n\n  setAuth(user: User) {\n    // Save JWT sent from server in localstorage\n    this.jwtService.saveToken('randomToken');\n    // Set current user data into observable\n    this.currentUserSubject.next(user);\n    // Set isAuthenticated to true\n    this.isAuthenticatedSubject.next(true);\n  }\n\n  purgeAuth() {\n    // Remove JWT from localstorage\n    this.jwtService.destroyToken();\n    // Set current user to an empty object\n    this.currentUserSubject.next({} as User);\n    // Set auth status to false\n    this.isAuthenticatedSubject.next(false);\n  }\n\n  attemptAuth(type, credentials): Observable<User> {\n    const route = (type === 'login') ? '/login' : '';\n    return this.apiService.post('/auth' + route, {user: credentials})\n      .pipe(map(\n        data => {\n          this.setAuth(data.user);\n          return data;\n        }\n      ));\n  }\n\n  getCurrentUser(): User {\n    return this.currentUserSubject.value;\n  }\n\n  // Update the user on the server (email, pass, etc)\n  update(user): Observable<User> {\n    return this.apiService\n      .put('/user', { user })\n      .pipe(map(data => {\n        // Update the currentUser observable\n        this.currentUserSubject.next(data.user);\n        return data.user;\n      }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { NoAuthGuard } from './no-auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: AuthComponent,\n    canActivate: [NoAuthGuard]\n  },\n  {\n    path: 'register',\n    component: AuthComponent,\n    canActivate: [NoAuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { UserService } from '../../core/services/user.service';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth.component.html'\n})\nexport class AuthComponent implements OnInit {\n  authType = '';\n  title = '';\n  isSubmitting = false;\n  authForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder\n  ) {\n    // use FormBuilder to create a form group\n    this.authForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.route.url.subscribe(data => {\n      // Get the last piece of the URL (it's either 'login' or 'register')\n      this.authType = data[data.length - 1].path;\n      // Set a title for the page accordingly\n      this.title = (this.authType === 'login') ? 'Sign in' : 'Sign up';\n      // add form control for username if this is the register page\n      // if (this.authType === 'register') {\n      //   this.authForm.addControl('username', new FormControl());\n      // } // check for controls\n    });\n  }\n\n  getFormValue(type: string) {\n    return this.authForm.get(type).value;\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    const credentials = this.authForm.value;\n    this.userService\n      .attemptAuth(this.authType, credentials)\n      .subscribe(\n        data => this.router.navigateByUrl('/'),\n        err => {\n          this.isSubmitting = false;\n        }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AuthComponent } from './auth.component';\nimport { NoAuthGuard } from './no-auth-guard.service';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AuthRoutingModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  declarations: [\n    AuthComponent\n  ],\n  providers: [\n    NoAuthGuard\n  ]\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { UserService } from '../../core/services/user.service';\nimport { map ,  take } from 'rxjs/operators';\n\n@Injectable()\nexport class NoAuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n\n    return this.userService.isAuthenticated.pipe(take(1), map(isAuth => !isAuth));\n\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { ShowAuthedDirective } from './show-authed.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  declarations: [\n    ShowAuthedDirective\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ShowAuthedDirective\n  ]\n})\nexport class SharedModule {}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { UserService } from '../core/services/user.service';\n\n@Directive({ selector: '[appShowAuthed]' })\nexport class ShowAuthedDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private userService: UserService,\n    private viewContainer: ViewContainerRef\n  ) {}\n\n  condition: boolean;\n\n  ngOnInit() {\n    this.userService.isAuthenticated.subscribe(\n      (isAuthenticated) => {\n        if (isAuthenticated && this.condition || !isAuthenticated && !this.condition) {\n          this.viewContainer.createEmbeddedView(this.templateRef);\n        } else {\n          this.viewContainer.clear();\n        }\n      }\n    );\n  }\n\n  @Input() set appShowAuthed(condition: boolean) {\n    this.condition = condition;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}